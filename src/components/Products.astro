---
export interface Props {
  products: Array<{
    id: string;
    name: string;
    price: number;
    image: string;
    description: string;
    category: string;
    stripePriceId: string;
  }>;
  title: string;
  showFilters?: boolean;
}

const { products, title, showFilters = false } = Astro.props;

// Get unique categories for filtering
const categories = [...new Set(products.map(product => product.category))];
---

<div class="products-container">
  <h1 class="products-title">{title}</h1>
  
  {showFilters && (
    <div class="filters">
      <button class="filter-btn active" data-category="all">all</button>
      {categories.map(category => (
        <button class="filter-btn" data-category={category.toLowerCase()}>{category.toLowerCase()}</button>
      ))}
    </div>
  )}
  
  <div class="product-list">
    {products.map(product => (
      <div class="product-card" data-category={product.category.toLowerCase()}>
        <div class="product-image">
          <img src={product.image} alt={product.name} />
        </div>
        <div class="product-info">
          <h3 class="product-name">{product.name}</h3>
          <div class="product-footer">
            <span class="product-price" data-product-id={product.id}>${product.price.toFixed(2)}</span>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  .products-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .products-title {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 2rem;
    color: #4E4E4E;
    font-family: "Cormorant", sans-serif;
  }

  .filters {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 3rem;
    flex-wrap: wrap;
  }

  .filter-btn {
    padding: 0.5rem 1rem;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    font-weight: 400;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: 16px;
    color: #4E4E4E
  }

  .filter-btn:hover {
    text-decoration: underline;
  }

  .filter-btn:hover,
  .filter-btn.active {
    color: #B77F92;
  }

  .product-list {
    --gap: calc(var(--spacing-unit) * 3);
    --row-gap: 32px;
    --columns: 3;
    --spacing-unit: 8px;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin: var(--spacing-unit) 0 0;
    gap: var(--gap);
    row-gap: var(--row-gap);
    margin-top: 36px;
  }

  .product-card {
    background: var(--background-color);
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid #f0f0f0;
    flex: 0 0 calc(33.333% - var(--gap));
    min-width: 300px;
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  .product-image {
    width: 100%;
    height: 250px;
    overflow: hidden;
  }

  

  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image img {
    transform: scale(1.05);
    opacity: 0.8;
    transition-duration: 0.7s;
  }

  .product-info {
    padding: 1.5rem;
  }

  .product-name {
    margin-bottom: 0.5rem;
    color: #4E4E4E;
    font-weight: 600;
    font-family: "Helvetica Neue", sans-serif;
    text-align: center;
	  word-break: break-word;
	  font-size: 1rem;
	  font-weight: 700;
  }


  .product-footer {
    display: flex;
    justify-content: center;
    align-items: center;
    /* margin-bottom: 1rem; */
  }

  .product-price {
    color: #4E4E4E;
    font-family: "Helvetica Neue", sans-serif;
    text-align: center;
	  font-size: 1rem;
	  font-weight: 400;
    cursor: pointer;
    transition: color 0.3s ease, text-decoration 0.3s ease;
  }

  .product-price:hover {
    color: #B77F92;
  }

  .product-name.price-hover {
    color: #B77F92;
  }



  /* Filter functionality */
  .product-card.hidden {
    display: none;
  }

  @media (max-width: 768px) {
    .products-container {
      padding: 1rem;
    }

    .products-title {
      font-size: 2rem;
    }

    .product-list {
      flex-direction: column;
      gap: 1.5rem;
    }

    .product-card {
      flex: 1 1 100%;
      min-width: unset;
    }

    .filters {
      gap: 0.5rem;
    }

    .filter-btn {
      padding: 0.4rem 0.8rem;
      font-size: 0.9rem;
    }
  }
</style>

<script>
  // Filter functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const productCards = document.querySelectorAll('.product-card');
    const productPrices = document.querySelectorAll('.product-price');

    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', function(this: HTMLButtonElement) {
        const category = this.getAttribute('data-category');
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        // Filter products
        productCards.forEach(card => {
          if (category === 'all' || card.getAttribute('data-category') === category) {
            card.classList.remove('hidden');
          } else {
            card.classList.add('hidden');
          }
        });
      });
    });

    // Product price click functionality
    productPrices.forEach(price => {
      price.addEventListener('click', function(this: HTMLSpanElement) {
        const productId = this.getAttribute('data-product-id');
        if (productId) {
          window.location.href = `/product/${productId}`;
        }
      });
    });

    // Product price hover functionality - change product name color
    productPrices.forEach(price => {
      const productCard = price.closest('.product-card');
      const productName = productCard?.querySelector('.product-name');
      
      if (productName) {
        price.addEventListener('mouseenter', function() {
          productName.classList.add('price-hover');
        });
        
        price.addEventListener('mouseleave', function() {
          productName.classList.remove('price-hover');
        });
      }
    });

  });
</script>